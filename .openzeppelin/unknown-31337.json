{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xc2e3252237fc279ba02a72b4ca87f2ca16bbc4ed8c019b2d4e1c2f68b42c200e"
  },
  "proxies": [
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x90f3550d3a598ef715802325a15695fe76c4dddc9e4dbaeff2122acbd947c262",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xc791c21fb7f2576f48b4b0bf57ae31dd19263bbeaecfa8fc7496d332d8b5b9f8",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x0ab561c5ab68af8251ab460f72293686693a04b58755392ccd113b40157bc564",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x17b1caa1e28d79e795a083b5067b0e315824727806d27eb88f020749afc860e4",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x9901ae62c3ce5b151c15baa23f9153e6792f9449cfcc94e30c950060fc9eb88d",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xc9b89ff0c43009c7c34e5d9964ebc06ccca465e029cbddea7a49329e4c32fdd2",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xcf5fbcb0f154e8f68251401b9d12bd3ddce8cc954a2afdbe484008a50000af91",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xc6e6e08171e9001142380133813855b397cecf2eacc5ccb96821760a97d82850",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xc89f7a2f2aae38e89b39facb3d520c78ccf055c354b6d6dbf3d17ee171554e14",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xddcfa96a1314260d747aa81412b43139c3412f7d359037475acac635a19e6256",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0xe850567132a16686e66d75d38c23b0ad82a21bcf4233d5ba3d031d33d5e91cb6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "55242edc0498361f54af16aa478bbf745df33b91f66c493a579061e1438d5f0c": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xe265caf59cef370c100d253b4b83d6005667c7ba413d050bdd557bcfa521ebef",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:27"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:30"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:421"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC1155DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155DefaultApproval.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BurnableUpgradeable.sol:41"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:14"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:69"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "355",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint1155Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\Mint1155Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:20"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "508",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:21"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "510",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:149"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "560",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "561",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:29"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "610",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "611",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "612",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:89"
          },
          {
            "label": "isPrivate",
            "offset": 0,
            "slot": "662",
            "type": "t_bool",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "663",
            "type": "t_array(t_uint256)49_storage",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:9"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "712",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "713",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "beb3830a7f8e6c46f4f75421257b0f109660c9afeb5f3b3cd53db42f0ef29bb2": {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xc5b83f91b080e2c5a3ddc7fe51169e53eed52b7168b384bb19f89512f0c4d790",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "matchers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "AssetMatcher",
            "src": "@rarible\\exchange-v2\\contracts\\AssetMatcher.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AssetMatcher",
            "src": "@rarible\\exchange-v2\\contracts\\AssetMatcher.sol:77"
          },
          {
            "label": "proxies",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "TransferExecutor",
            "src": "@rarible\\transfer-manager\\contracts\\TransferExecutor.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TransferExecutor",
            "src": "@rarible\\transfer-manager\\contracts\\TransferExecutor.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OrderValidator",
            "src": "@rarible\\exchange-v2\\contracts\\OrderValidator.sol:52"
          },
          {
            "label": "fills",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ExchangeV2Core",
            "src": "@rarible\\exchange-v2\\contracts\\ExchangeV2Core.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ExchangeV2Core",
            "src": "@rarible\\exchange-v2\\contracts\\ExchangeV2Core.sol:291"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:21"
          },
          {
            "label": "royaltiesRegistry",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IRoyaltiesProvider)1478",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:22"
          },
          {
            "label": "defaultFeeReceiver",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:24"
          },
          {
            "label": "feeReceivers",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)46_storage",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:271"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IRoyaltiesProvider)1478": {
            "label": "contract IRoyaltiesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "5b696b5526216ccf08353c9cab39a2b62444c3f5ebad97d381376a2b10c6a85c": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x80a91ad1a827b77e305edbebe4486370ae1734126cf036dd30099d1a11f100e3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_struct(UintSet)2620_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "152",
            "type": "t_struct(UintToAddressMap)1997_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "156",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:47"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:53"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:56"
          },
          {
            "label": "_burnedTokens",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)40_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:495"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC721DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721DefaultApproval.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721BurnableUpgradeable.sol:40"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint721Validator",
            "src": "@rarible\\tokens\\contracts\\Mint721Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "ERC721Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Lazy.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Lazy.sol:115"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Base",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Base.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Rarible",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Rarible.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)1671_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)2620_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Map)1679_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1671_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)1671_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)2234_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)2620_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2234_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)1997_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1679_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "714ccfbb34785d4330965c76e895d9fe02ba83cd043a0db983bb9a266c45e308": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x0200585bade971a22e5ec4007eceb7ac1215c5c33b08e2a457063520ebd84d40",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:23"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:26"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:29"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:32"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:35"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:38"
          },
          {
            "label": "_burnedTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_uint256)43_storage",
            "contract": "ERC721UpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721UpgradeableMinimal.sol:443"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC721DefaultApprovalMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721DefaultApprovalMinimal.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721DefaultApprovalMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721DefaultApprovalMinimal.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeableMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721BurnableUpgradeableMinimal.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint721Validator",
            "src": "@rarible\\tokens\\contracts\\Mint721Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URI",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721URI.sol:19"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "456",
            "type": "t_string_storage",
            "contract": "ERC721URI",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721URI.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "457",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721URI",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721URI.sol:92"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "ERC721LazyMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721LazyMinimal.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "508",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721LazyMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721LazyMinimal.sol:113"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "558",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "559",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "608",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BaseMinimal",
            "src": "@rarible\\tokens\\contracts\\erc-721-minimal\\ERC721BaseMinimal.sol:45"
          },
          {
            "label": "isPrivate",
            "offset": 0,
            "slot": "658",
            "type": "t_bool",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "659",
            "type": "t_array(t_uint256)49_storage",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:9"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "708",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "709",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "ec4e1fcd0e8a164396b018cb9081e49cfc281a76282e4d2a18a970c0b85f882a": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x660b8942a22587ac47014c3a17cf951087be20489d4d395e9326c195154e06c0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OperatorRole",
            "src": "@rarible\\role-operator\\contracts\\OperatorRole.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "56faee969ff1da0fa7df502efff090dee343827f76c615992e4508e4db650da7": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x1b386c6bdba69c6d25ccbb156d5602580cf90605733eda13dba0946105ddc4d8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OperatorRole",
            "src": "@rarible\\role-operator\\contracts\\OperatorRole.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d16a826fd9712f2d43dd81ae2f8323a8de3743492f7dde969d22e062e5515122": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xb7bb50699577803903e0dfdb1978164d3153310678eaea8be6f9837fcb527ba4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OperatorRole",
            "src": "@rarible\\role-operator\\contracts\\OperatorRole.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "de6501e1c641a3078918c7fcda418463e9750a60ccfe8c106feff1ec7596d639": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xb0c2a871e90f224dc0bb5ac98782f8d3122d4e7ed114645cc61bea19d5cd7a69",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OperatorRole",
            "src": "@rarible\\role-operator\\contracts\\OperatorRole.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ac532db99feea77c51bbdb64004cd1cec5385adbd7a7cff41a49241b0302b6d8": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x7dc61b961b59c9434ba8ff97b997f5d8a583f612ba2c13330b0d65ed8f09f97e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "royaltiesByTokenAndTokenId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoyaltiesSet)6925_storage)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:29"
          },
          {
            "label": "royaltiesByToken",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_struct(RoyaltiesSet)6925_storage)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:31"
          },
          {
            "label": "royaltiesProviders",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)46_storage",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:250"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(RoyaltiesSet)6925_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltiesSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoyaltiesSet)6925_storage)": {
            "label": "mapping(bytes32 => struct RoyaltiesRegistry.RoyaltiesSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltiesSet)6925_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltiesSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)6603_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
